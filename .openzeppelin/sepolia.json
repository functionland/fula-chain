{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x71072eED8b969073daD554BeE5d39D52bA404901",
      "txHash": "0x0be96f15d5c446f2789fd14e0191856218435fc72b9c7bcd056d371c17a8f584",
      "kind": "uups"
    },
    {
      "address": "0x373fc25db85570F240cAe7661E49AA6605992c40",
      "txHash": "0x20cf349c9ec776eef0438ee78017420d0c5011cdbefa40bac4adff6336e71512",
      "kind": "uups"
    },
    {
      "address": "0x17F81d955D1977964ed8C5A748e62fc829d898Dd",
      "txHash": "0xe43cae061765fce9f2e02c0c70747ed68cfe7f0d677e17684da3ee9bc4b1da18",
      "kind": "uups"
    },
    {
      "address": "0xFd3F71338f422B518e9eb6A76fF0D32093cD5fc8",
      "txHash": "0xc28a4931e42b87ace5e7f786c6fdf1120cd0e5dd02a2ae2efa9fc5948f3112fd",
      "kind": "uups"
    },
    {
      "address": "0xE91214431dBF3279c27062611dF162c16Fd35230",
      "txHash": "0x396158df2d7309f99f0599ba38ed84b0d43569152228375b738e74699b6106d1",
      "kind": "uups"
    },
    {
      "address": "0x2eCcDe2765223B84e4BB4c901e27AA1e60A5c133",
      "txHash": "0xc668cb27418361889375dbdf846c818cade511d914a852bb6443a23d37566e83",
      "kind": "uups"
    }
  ],
  "impls": {
    "0f1ed185b9859d70b982d1e6a2a3ab3e06403f5e26baf7508d968755c28f90d0": {
      "address": "0xFE44c9A33E243994cB94CFFC3A76F62785c463ea",
      "txHash": "0xacb3198f41e139b613587bf6ba122d018135f41cbc58d3c7fe82b4a5ae2ca998",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(Counter)2160_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "bridgeOperators",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StorageToken",
            "src": "contracts\\StorageToken.sol:12"
          },
          {
            "label": "poolContracts",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StorageToken",
            "src": "contracts\\StorageToken.sol:13"
          },
          {
            "label": "proofContracts",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StorageToken",
            "src": "contracts\\StorageToken.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2160_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2160_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2006da8464b4c5b9ff4ccc42267366ae48da371ccd774d2b8ee575186177396d": {
      "address": "0x921f5faCb71d5E6eB3c5CdBa53Ff2ED7Ea6300fa",
      "txHash": "0x5190d422e2faacf59378843516c9aa1cf7b7e2fc1e5dc339b2785f459675f505",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(StorageToken)5686",
            "contract": "StoragePool",
            "src": "contracts\\StoragePool.sol:10"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Pool)6040_storage)",
            "contract": "StoragePool",
            "src": "contracts\\StoragePool.sol:11"
          },
          {
            "label": "joinRequests",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_array(t_struct(JoinRequest)6067_storage)dyn_storage)",
            "contract": "StoragePool",
            "src": "contracts\\StoragePool.sol:12"
          },
          {
            "label": "lockedTokens",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StoragePool",
            "src": "contracts\\StoragePool.sol:13"
          },
          {
            "label": "poolCounter",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "StoragePool",
            "src": "contracts\\StoragePool.sol:14"
          },
          {
            "label": "poolCreationTokens",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "StoragePool",
            "src": "contracts\\StoragePool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(JoinRequest)6067_storage)dyn_storage": {
            "label": "struct IStoragePool.JoinRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(StorageToken)5686": {
            "label": "contract StorageToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Member)6049_storage)": {
            "label": "mapping(address => struct IStoragePool.Member)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(JoinRequest)6067_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IStoragePool.JoinRequest[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Pool)6040_storage)": {
            "label": "mapping(uint256 => struct IStoragePool.Pool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Criteria)6052_storage": {
            "label": "struct IStoragePool.Criteria",
            "members": [
              {
                "label": "minPingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(JoinRequest)6067_storage": {
            "label": "struct IStoragePool.JoinRequest",
            "members": [
              {
                "label": "peerId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accountId",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "poolId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "votes",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "approvals",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rejections",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Member)6049_storage": {
            "label": "struct IStoragePool.Member",
            "members": [
              {
                "label": "joinDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "peerId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accountId",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "reputationScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Pool)6040_storage": {
            "label": "struct IStoragePool.Pool",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "region",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_mapping(t_address,t_struct(Member)6049_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "memberList",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "criteria",
                "type": "t_struct(Criteria)6052_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "requiredTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7d264e497c1f2812ee4964cee6d609de04f987c51b1ca930c20216b2f41f03e2": {
      "address": "0x52A3cf73f0c3C207aD04e2861da5b585992B9e07",
      "txHash": "0xb830a333d518d6fe59ab72136b05238956a6281b28073bd3b90dbedb46b72524",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(StorageToken)5686",
            "contract": "StorageProof",
            "src": "contracts\\StorageProof.sol:10"
          },
          {
            "label": "proofs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Proof)6143_storage))",
            "contract": "StorageProof",
            "src": "contracts\\StorageProof.sol:11"
          },
          {
            "label": "uploads",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(UploadRequest)6157_storage))",
            "contract": "StorageProof",
            "src": "contracts\\StorageProof.sol:12"
          },
          {
            "label": "removals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_string_memory_ptr,t_struct(RemovalRequest)6167_storage)",
            "contract": "StorageProof",
            "src": "contracts\\StorageProof.sol:13"
          },
          {
            "label": "storageCostPerTBYear",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "StorageProof",
            "src": "contracts\\StorageProof.sol:14"
          },
          {
            "label": "miningRewardPerDay",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "StorageProof",
            "src": "contracts\\StorageProof.sol:15"
          },
          {
            "label": "lastRewardDistribution",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "StorageProof",
            "src": "contracts\\StorageProof.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(StorageToken)5686": {
            "label": "contract StorageToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(UploadRequest)6157_storage))": {
            "label": "mapping(address => mapping(string => struct IStorageProof.UploadRequest))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Proof)6143_storage)": {
            "label": "mapping(string => struct IStorageProof.Proof)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(RemovalRequest)6167_storage)": {
            "label": "mapping(string => struct IStorageProof.RemovalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(UploadRequest)6157_storage)": {
            "label": "mapping(string => struct IStorageProof.UploadRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Proof)6143_storage))": {
            "label": "mapping(uint256 => mapping(string => struct IStorageProof.Proof))",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Proof)6143_storage": {
            "label": "struct IStorageProof.Proof",
            "members": [
              {
                "label": "cid",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "storer",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "poolId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "replicationCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RemovalRequest)6167_storage": {
            "label": "struct IStorageProof.RemovalRequest",
            "members": [
              {
                "label": "cids",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uploader",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "poolId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UploadRequest)6157_storage": {
            "label": "struct IStorageProof.UploadRequest",
            "members": [
              {
                "label": "cids",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "replicationFactor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "poolId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "uploader",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "currentReplications",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "279fb26b61d6e41e90b7d61e533f48311fc261c86df41a1301606896cf2527e5": {
      "address": "0x4b6349C2e2787d5Fb7b200D06F91d8f445DBCd48",
      "txHash": "0x61236046d8f91f1a59238e83a3c1a05329677b7f10397ebffbb7c2654fa71247",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(Counter)2160_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "bridgeOperators",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StorageTokenV1",
            "src": "contracts\\StorageTokenV1.sol:13"
          },
          {
            "label": "poolContracts",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StorageTokenV1",
            "src": "contracts\\StorageTokenV1.sol:14"
          },
          {
            "label": "proofContracts",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StorageTokenV1",
            "src": "contracts\\StorageTokenV1.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2160_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2160_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
